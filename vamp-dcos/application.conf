# Default settings, you can overwrite these with environment variables
vamp_url = "http://10.20.0.100:8080"
vamp_url = ${?VAMP_URL}

zookeeper_servers = "zk-1.zk:2181"
zookeeper_servers = ${?VAMP_ZOOKEEPER_SERVERS}

elasticsearch_url = "http://elasticsearch.marathon.mesos:9200"
elasticsearch_url = ${?VAMP_ELASTICSEARCH_URL}

# Required SQL configuration settings
db_type         = ${VAMP_DB_TYPE}
db_create_url   = ""
db_create_url   = ${?VAMP_DB_CREATE_URL}
db_url          = ""
db_url          = ${?VAMP_DB_URL}
db_user         = ""
db_user         = ${?VAMP_DB_USER}
db_password     = ""
db_password     = ${?VAMP_DB_PASSWORD}

# Optional timeout configuration settings
driver_synchronization_period = 10s
driver_synchronization_period = ${?DRIVER_SYNCHRONIZATION_PERIOD}

sql_synchronization_period = 30s
sql_synchronization_period = ${?SQL_SYNCHRONIZATION_PERIOD}

sql_delay = 5s
sql_selay = ${?SQL_DELAY}

vamp_workflow_execution_period = 60
vamp_workflow_execution_period = ${?VAMP_WORKFLOW_EXECUTION_PERIOD}

vamp_workflow_execution_timeout = 10
vamp_workflow_execution_timeout = ${?VAMP_WORKFLOW_EXECUTION_TIMEOUT}

zookeeper_connect_timeout = 5000
zookeeper_connect_timeout = ${?ZOOKEEPER_CONNECT_TIMEOUT}

zookeeper_session_timeout = 5000
zookeeper_session_timeout = ${?ZOOKEEPER_SESSION_TIMEOUT}

vamp_container_driver_network = BRIDGE
vamp_container_driver_network = ${?VAMP_CONTAINER_DRIVER_NETWORK}

# Advanced settings, you shouldn't need to change these
vamp {

  namespace = "vamp"

  model.resolvers {
    workflow = [
      "io.vamp.pulse.ElasticsearchValueResolver"
    ]
  }

  persistence {
    database {
      index = "vamp-persistence-"${vamp.namespace}

      type = ${db_type}

      sql {
        url = ${db_url}
        user = ${db_user}
        password = ${db_password}
        delay = ${sql_delay}
        synchronization {
          period = ${sql_synchronization_period}
        }
      }
    }

    key-value-store {
      type = "zookeeper"
      zookeeper {
        servers = ${zookeeper_servers}
        session-timeout = ${zookeeper_session_timeout}
        connect-timeout = ${zookeeper_connect_timeout}
      }
    }
  }

  container-driver {
    type = "marathon"
    mesos.url = "http://leader.mesos:5050"
    marathon.url = "http://marathon.mesos:8080"
    network = ${vamp_container_driver_network}
  }

  http-api.ui {
    directory = "/usr/local/vamp/ui"
    index = ${vamp.http-api.ui.directory}"/index.html"
  }

  workflow-driver {
    type = "marathon,metronome" # if chronos is installed: "marathon,chronos"
    metronome.url = "http://metronome.mesos:9000"
    workflow {
      deployables = [
        {
          type = "application/javascript"
          breed = "vamp-workflow-javascript"
        }
      ]
      scale {
        instances = 1
        cpu = 0.1
        memory = 128MB
      }

      vamp-url = ${vamp_url}
      vamp-key-value-store-path = "/vamp/"${vamp.namespace}"/workflows/${workflow}"
      vamp-key-value-store-type = ${vamp.persistence.key-value-store.type}
      vamp-vamp-key-value-store-connection = ${zookeeper_servers}
      vamp-workflow-execution-period = ${vamp_workflow_execution_period}
      vamp-workflow-execution-timeout = ${vamp_workflow_execution_timeout}
      vamp-elasticsearch-url = ${vamp.pulse.elasticsearch.url}
    }
  }

  pulse {
    type = "elasticsearch"
    elasticsearch.url = ${elasticsearch_url}
  }

  gateway-driver {
    host = "172.17.0.1"
    elasticsearch.metrics {
      index = "vamp-vga-*"
      type = "log"
    }
    marshallers = [
      {
        type = "haproxy"
        name = "1.7"
        template {
          resource = "/io/vamp/gateway_driver/haproxy/template.twig"
        }
      }
    ]
  }

  operation {
    synchronization {
      period = ${driver_synchronization_period}

      check {
        cpu = true
        memory = true
        instances = true
        health-checks = true
      }
    }
    deployment {
      scale {
        instances = 1
        cpu = 0.2
        memory = 256MB
      }
      arguments = [
        "privileged=true"
      ]
    }
  }

  lifter {
    artifact.files = [
      "/usr/local/vamp/artifacts/breeds/vamp-workflow-javascript.yml"

      "/usr/local/vamp/artifacts/breeds/health.js"
      "/usr/local/vamp/artifacts/breeds/metrics.js"
      "/usr/local/vamp/artifacts/breeds/allocation.js"
      "/usr/local/vamp/artifacts/breeds/kibana.js"
      "/usr/local/vamp/artifacts/breeds/vga.js"
      "/usr/local/vamp/artifacts/workflows/health.yml"
      "/usr/local/vamp/artifacts/workflows/metrics.yml"
      "/usr/local/vamp/artifacts/workflows/allocation.yml"
      "/usr/local/vamp/artifacts/workflows/kibana.yml"
      "/usr/local/vamp/artifacts/workflows/vga.yml"
    ]
    sql {
      connection {
        table-url = ${db_url}
        database-url = ${db_create_url}
      }
      database = "vamp-${namespace}"
      user = ${db_user}
      password = ${db_password}
    }
  }
}
