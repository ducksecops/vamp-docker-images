vamp {

  namespace = "vamp"

  persistence {
    database {
      type: "mysql"
      sql {
        database = "vamp-${namespace}"
        user = "root"
        password = "secret"
        url = ${MYSQL}"/vamp-${namespace}?useSSL=false"
        database-server-url = ${MYSQL}"?useSSL=false"
      }
    }

    key-value-store {
      type = "zookeeper"
      zookeeper.servers = ${ZOOKEEPER}
    }
  }

  container-driver {
    type = "marathon"
    mesos.url = ${MESOS_URL}
    marathon.url = ${MARATHON}
  }

  gateway-driver.host = ${GATEWAY_DRIVER_HOST}

  workflow-driver.type = "marathon"

  pulse {
    type = "elasticsearch"
    elasticsearch.url = ${VAMP_ELASTICSEARCH_URL}
  }

  lifter {

    auto-initialize = true

    http-api.ui {
      directory = "/usr/local/vamp/lifter/ui"
      index = ${vamp.lifter.http-api.ui.directory}"/index.html"
    }

    artifacts = [
      "/usr/local/vamp/artifacts/breeds/vamp-workflow-javascript.yml"
      "/usr/local/vamp/artifacts/breeds/health.js"
      "/usr/local/vamp/artifacts/breeds/metrics.js"
      "/usr/local/vamp/artifacts/breeds/allocation.js"
      "/usr/local/vamp/artifacts/blueprints/sava:1.0.yml"
      "/usr/local/vamp/artifacts/blueprints/sava:1.1.yml"
      "/usr/local/vamp/artifacts/workflows/health.yml"
      "/usr/local/vamp/artifacts/workflows/metrics.yml"
      "/usr/local/vamp/artifacts/workflows/allocation.yml"
    ]
  }
}

akka.jvm-exit-on-fatal-error = true
