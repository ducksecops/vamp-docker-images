vamp {

  namespace = "vamp"

  persistence {
    database.type = "in-memory"
    key-value-store {
      type = "zookeeper"
      zookeeper.servers = ${ZOOKEEPER}
    }
  }

  container-driver {
    type = "marathon"
    mesos.url = ""
    marathon.url = ""
  }

  http-api.ui {
    directory = "/usr/local/vamp/ui"
    index = ${vamp.http-api.ui.directory}"/index.html"
  }

  workflow-driver {
    type = "marathon"
    workflow {
      deployables = [
        {
          type = "application/javascript"
          breed = "vamp-workflow-javascript"
        }
      ]

      scale {
        instances = 1
        cpu = 0.1
        memory = 128MB
      }

      vamp-url = "http://"${VAMP_HOST}":8080"
      vamp-key-value-store-path = "/vamp/"${vamp.namespace}"/workflows/${workflow}"
      vamp-key-value-store-type = ${vamp.persistence.key-value-store.type}
      vamp-key-value-store-connection = ${ZOOKEEPER}
      vamp-elasticsearch-url = ${VAMP_ELASTICSEARCH_URL}
      vamp-workflow-execution-period = 60
      vamp-workflow-execution-timeout = 10
    }
  }

  pulse {
    type = "no-store"
  }

  gateway-driver {
    elasticsearch.metrics {
      index = "vamp-vga-*"
      type = "log"
    }
    marshallers = [
      {
        type = "haproxy"
        name = "1.7"
        template {
          resource = "/io/vamp/gateway_driver/haproxy/template.twig"
        }
      }
    ]
  }

  operation {
    synchronization {
      period = 3 seconds

      check {
        cpu = true
        memory = true
        instances = true
        health-checks = true
      }
    }
    deployment {
      scale {
        instances = 1
        cpu = 0.2
        memory = 256MB
      }
      arguments = [
        "privileged=true"
      ]
    }
  }
}

akka.jvm-exit-on-fatal-error = false
