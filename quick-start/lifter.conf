vamp {

  namespace = "vamp"

  pulse {
    type = "elasticsearch"
    elasticsearch.url = "http://"${DOCKER_HOST_IP}":9200"
  }

  persistence {
    database {
      type = "elasticsearch"
      class-name = "io.vamp.persistence.refactor.dao.EsDaoFactory"

      elasticsearch {
        elasticsearch-url = "elasticsearch://"${DOCKER_HOST_IP}":9300"
        elasticsearch-cluster-name = "elasticsearch"
        elasticsearch-test-cluster = false
      }
    }

    key-value-store {
      type = "zookeeper"  # zookeeper, etcd or consul
      base-path = "/vamp/${namespace}"

      zookeeper {
        servers = ${DOCKER_HOST_IP}":2181"
      }
    }
  }

  container-driver {
    type = "marathon"
    mesos.url = "http://"${DOCKER_HOST_IP}":5050"
    marathon.url = "http://"${DOCKER_HOST_IP}":9090"
  }

  lifter {

    http-api {
      interface = 0.0.0.0
      port = 8081
      response-timeout = 10 seconds
    }

    auto-initialize = true

    http-api.ui {
      directory = "/usr/local/vamp/lifter/ui"
      index = ${vamp.lifter.http-api.ui.directory}"/index.html"
    }

    artifacts = [
      "/usr/local/vamp/artifacts/breeds/vamp-workflow-javascript.yml"

      "/usr/local/vamp/artifacts/breeds/health.js"
      "/usr/local/vamp/artifacts/breeds/metrics.js"
      "/usr/local/vamp/artifacts/breeds/allocation.js"
      "/usr/local/vamp/artifacts/breeds/kibana.js"
      "/usr/local/vamp/artifacts/workflows/health.yml"
      "/usr/local/vamp/artifacts/workflows/metrics.yml"
      "/usr/local/vamp/artifacts/workflows/allocation.yml"
      "/usr/local/vamp/artifacts/workflows/kibana.yml"
    ]
  }
}

akka.jvm-exit-on-fatal-error = false
