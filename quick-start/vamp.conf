vamp {

  namespace = "vamp"
  persistence {
    key-value-store {
      type = "zookeeper"  # zookeeper, etcd or consul
      base-path = "/vamp/${namespace}"

      zookeeper {
        servers = ${DOCKER_HOST_IP}":2181"
      }
    }
    database {
      type = "elasticsearch"
      class-name = "io.vamp.persistence.refactor.dao.EsDaoFactory"

      elasticsearch {
        elasticsearch-url = "elasticsearch://"${DOCKER_HOST_IP}":9300"
        elasticsearch-cluster-name = "elasticsearch"
        elasticsearch-test-cluster = false
      }
    }
  }

  http-api {
    ui {
      directory = "/usr/local/vamp/ui"
      index = ${vamp.http-api.ui.directory}"/index.html"
    }
    port = 8080
    interface = 0.0.0.0
    response-timeout = 30 seconds
    strip-path-segments = 0
    sse.keep-alive-timeout = 15 seconds # timeout after an empty comment (":\n") will be sent in order keep connection alive
    websocket.stream-limit = 100
  }

  workflow-driver {
    type = "marathon,metronome"
    metronome.url = "http://"${DOCKER_HOST_IP}":9191"
    workflow {
      deployables = [
        {
          type = "application/javascript"
          breed = "vamp-workflow-javascript"
        }
      ]

      scale {
        instances = 1
        cpu = 0.1
        memory = 128MB
      }
      vamp-url = "http://"${DOCKER_HOST_IP}":8080"
      vamp-key-value-store-path = "/vamp/"${vamp.namespace}"/workflows/${workflow}"
      vamp-key-value-store-type = "zookeeper"
      vamp-vamp-key-value-store-connection = ${DOCKER_HOST_IP}":2181"
      vamp-workflow-execution-period = 60
      vamp-workflow-execution-timeout = 10
      vamp-elasticsearch-url = "http://"${DOCKER_HOST_IP}":9200"
    }
  }

  container-driver {
    type = "marathon"
    mesos.url = "http://"${DOCKER_HOST_IP}":5050"
    marathon.url = "http://"${DOCKER_HOST_IP}":8090"
  }


  pulse {
    type = "elasticsearch"
    elasticsearch.url = "http://"${DOCKER_HOST_IP}":9200"
  }


  gateway-driver {
    elasticsearch.metrics {
      index = "vamp-vga-*"
      type = "log"
    }
    marshallers = [
      {
        type = "haproxy"
        name = "1.7"
        template {
          resource = "/io/vamp/gateway_driver/haproxy/template.twig"
        }
      }
    ]
  }

  operation {
    synchronization {
      period = 3 seconds

      check {
        cpu = true
        memory = true
        instances = true
        health-checks = false
      }
    }

    deployment {
      scale {
        instances = 1
        cpu = 0.2
        memory = 256MB
      }
      arguments = [
        "privileged=true"
      ]
    }

    gateway {
      virtual-hosts {
        formats{
          deployment-cluster-port: "$port.$cluster.$deployment.vamp"
          deployment-port: "$port.$deployment.vamp"
          gateway: "$gateway.vamp"
        }
        enabled: true
      }
      response-timeout: 5 seconds
      port-range: 40000-45000
    }
  }
}

akka.jvm-exit-on-fatal-error = false
