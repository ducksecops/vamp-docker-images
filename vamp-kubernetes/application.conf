vamp_url = "http://vamp:8080"

vamp {
  namespace = "default"

  model.resolvers {
    workflow = [
      "io.vamp.pulse.ElasticsearchValueResolver"
    ]
  }

  persistence {
    database.type = "in-memory"

    key-value-store {
      type = "etcd"
      etcd.url = "http://etcd-client:2379"
    }
  }

  container-driver {
    type = "kubernetes"
    kubernetes {
      url = "https://kubernetes"
      service-type = "LoadBalancer"
    }
  }

  http-api.ui {
    directory = "/usr/local/vamp/ui"
    index = ${vamp.http-api.ui.directory}"/index.html"
  }

  workflow-driver {
    type = "kubernetes"

    workflow {
      deployables = [
        {
          type = "application/javascript"
          breed = "vamp-workflow-javascript"
        }
      ]
      scale {
        instances = 1
        cpu = 0.1
        memory = 128MB
      }

      vamp-url = ${vamp_url}
      vamp-key-value-store-path = "/vamp/"${vamp.namespace}"/workflows/${workflow}/value"
      vamp-key-value-store-type = "etcd"
      vamp-vamp-key-value-store-connection = ${vamp.persistence.key-value-store.etcd.url}
      vamp-workflow-execution-period = 60
      vamp-workflow-execution-timeout = 10
      vamp-elasticsearch-url = ${vamp.pulse.elasticsearch.url}
    }
  }

  pulse {
    type = "elasticsearch"
    elasticsearch.url = "http://elasticsearch:9200"
  }

  gateway-driver {
    elasticsearch.metrics {
      index = "vamp-vga-*"
      type = "log"
    }
    marshallers = [
      {
        type = "haproxy"
        name = "1.7"
        template {
          resource = "/io/vamp/gateway_driver/haproxy/template.twig"
        }
      }
    ]
  }

  operation {
    synchronization {
      period = 3 seconds

      check {
        cpu = true
        memory = true
        instances = true
        health-checks = true
      }
    }
    deployment {
      scale {
        instances = 1
        cpu = 0.2
        memory = 256MB
      }
      arguments = [
        "privileged=true"
      ]
    }
  }

  lifter {

    pulse.enabled = true
    persistence.enabled = true

    artifact {
      enabled = true

      force = true

      files = [
        "/usr/local/vamp/artifacts/breeds/vamp-workflow-javascript.yml"

        "/usr/local/vamp/artifacts/breeds/health.js"
        "/usr/local/vamp/artifacts/breeds/metrics.js"
        "/usr/local/vamp/artifacts/breeds/allocation.js"
        "/usr/local/vamp/artifacts/breeds/kibana.js"
        "/usr/local/vamp/artifacts/workflows/health.yml"
        "/usr/local/vamp/artifacts/workflows/metrics.yml"
        "/usr/local/vamp/artifacts/workflows/allocation.yml"
        "/usr/local/vamp/artifacts/workflows/kibana.yml"
      ]
    }
  }
}

akka.ssl-config.trustManager.stores = [
  {
    type = "PEM"
    path = "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"
  }
]
